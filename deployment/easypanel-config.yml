# ===============================================
# CONFIGURACIÓN PARA EASYPANEL
# HubSpot PDF Generator
# Dominio: automaticpdfhub.cloud
# Servidor: https://145.79.2.141/
# ===============================================

version: '3.8'

services:
  # =====================================
  # Base de datos PostgreSQL
  # =====================================
  postgres:
    image: postgres:15-alpine
    container_name: automaticpdf-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: automaticpdf_db
      POSTGRES_USER: automaticpdf_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5487:5432"  # Puerto menos común
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - automaticpdf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U automaticpdf_user -d automaticpdf_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =====================================
  # Redis para cache y queues
  # =====================================
  redis:
    image: redis:7-alpine
    container_name: automaticpdf-redis
    restart: unless-stopped
    ports:
      - "6418:6379"  # Puerto menos común
    volumes:
      - redis_data:/data
    networks:
      - automaticpdf-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  # =====================================
  # Gotenberg para PDFs
  # =====================================
  gotenberg:
    image: gotenberg/gotenberg:7
    container_name: automaticpdf-gotenberg
    restart: unless-stopped
    ports:
      - "3021:3000"  # Puerto menos común
    networks:
      - automaticpdf-network
    command:
      - "gotenberg"
      - "--chromium-disable-web-security"
      - "--chromium-allow-file-access-from-files"
      - "--chromium-disable-javascript"
      - "--chromium-allow-insecure-localhost"
      - "--chromium-ignore-certificate-errors"
      - "--log-level=warn"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 60s
      timeout: 20s
      retries: 3

  # =====================================
  # Backend API
  # =====================================
  backend:
    image: ${DOCKER_REGISTRY}/automaticpdf-backend:latest
    container_name: automaticpdf-backend
    restart: unless-stopped
    ports:
      - "3022:3002"  # Puerto menos común
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      gotenberg:
        condition: service_healthy
    environment:
      NODE_ENV: production
      APP_PORT: 3002
      FRONTEND_URL: https://automaticpdfhub.cloud
      
      # Database
      DATABASE_URL: postgresql://automaticpdf_user:${POSTGRES_PASSWORD}@postgres:5432/automaticpdf_db?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      
      # Gotenberg
      GOTENBERG_URL: http://gotenberg:3000
      
      # HubSpot (configurar con valores reales)
      HUBSPOT_CLIENT_ID: ${HUBSPOT_CLIENT_ID}
      HUBSPOT_CLIENT_SECRET: ${HUBSPOT_CLIENT_SECRET}
      HUBSPOT_REDIRECT_URI: https://automaticpdfhub.cloud/api/auth/hubspot/callback
      
      # Security
      JWT_SECRET: ${JWT_SECRET}
      
      # File Storage
      STORAGE_PATH: /app/storage
      FILE_BASE_URL: https://automaticpdfhub.cloud/files
      
      # Performance
      DOCUMENT_CONCURRENCY: 3
      HUBSPOT_CONCURRENCY: 2
      LOG_LEVEL: warn
      
      # Rate Limiting
      RATE_LIMIT_MAX_REQUESTS: 200
      MAX_FILE_SIZE_MB: 25
    volumes:
      - backend_storage:/app/storage
      - backend_logs:/app/logs
    networks:
      - automaticpdf-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =====================================
  # Frontend React
  # =====================================
  frontend:
    image: ${DOCKER_REGISTRY}/automaticpdf-frontend:latest
    container_name: automaticpdf-frontend
    restart: unless-stopped
    ports:
      - "3020:80"  # Puerto menos común para nginx interno
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: https://automaticpdfhub.cloud/api
      REACT_APP_FILES_URL: https://automaticpdfhub.cloud/files
      REACT_APP_ENV: production
    networks:
      - automaticpdf-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 60s
      timeout: 15s
      retries: 3

  # =====================================
  # Nginx Proxy Reverso
  # =====================================
  nginx:
    image: nginx:alpine
    container_name: automaticpdf-nginx
    restart: unless-stopped
    ports:
      - "8095:80"   # Puerto público para EasyPanel
      - "8096:443"  # Puerto HTTPS
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - automaticpdf-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  automaticpdf-network:
    driver: bridge
    name: automaticpdf-network

volumes:
  postgres_data:
    name: automaticpdf-postgres-data
  redis_data:
    name: automaticpdf-redis-data
  backend_storage:
    name: automaticpdf-backend-storage
  backend_logs:
    name: automaticpdf-backend-logs
