# Docker Compose para HubSpot PDF Generator
# Incluye todos los servicios necesarios para desarrollo

version: '3.8'

services:
  # =====================================
  # Base de datos PostgreSQL
  # =====================================
  postgres:
    image: postgres:15
    container_name: hubspot-pdf-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hubspot_pdf_db
      POSTGRES_USER: hubspot_user
      POSTGRES_PASSWORD: hubspot_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=es_MX.UTF-8 --lc-ctype=es_MX.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - hubspot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hubspot_user -d hubspot_pdf_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =====================================
  # Redis para cache y queues
  # =====================================
  redis:
    image: redis:7-alpine
    container_name: hubspot-pdf-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hubspot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # =====================================
  # Gotenberg para generación de PDFs
  # =====================================
  gotenberg:
    image: gotenberg/gotenberg:7
    container_name: hubspot-pdf-gotenberg
    restart: unless-stopped
    ports:
      - "3001:3000"
    networks:
      - hubspot-network
    command:
      - "gotenberg"
      - "--chromium-disable-web-security"
      - "--chromium-allow-file-access-from-files"
      - "--chromium-disable-javascript"
      - "--chromium-allow-insecure-localhost"
      - "--chromium-ignore-certificate-errors"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - GOTENBERG_CHROMIUM_DISABLE_WEB_SECURITY=true
      - GOTENBERG_CHROMIUM_ALLOW_FILE_ACCESS_FROM_FILES=true
      - GOTENBERG_LOG_LEVEL=INFO

  # =====================================
  # Backend API (Node.js)
  # =====================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hubspot-pdf-backend
    restart: unless-stopped
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      gotenberg:
        condition: service_healthy
    environment:
      NODE_ENV: development
      APP_PORT: 3002
      FRONTEND_URL: http://localhost:3000
      
      # Database
      DATABASE_URL: postgresql://hubspot_user:hubspot_password@postgres:5432/hubspot_pdf_db?schema=public
      REDIS_URL: redis://redis:6379
      
      # Gotenberg
      GOTENBERG_URL: http://gotenberg:3000
      
      # HubSpot (usar variables reales en producción)
      HUBSPOT_CLIENT_ID: ${HUBSPOT_CLIENT_ID:-your_hubspot_client_id}
      HUBSPOT_CLIENT_SECRET: ${HUBSPOT_CLIENT_SECRET:-your_hubspot_client_secret}
      HUBSPOT_REDIRECT_URI: ${HUBSPOT_REDIRECT_URI:-http://localhost:3002/api/auth/hubspot/callback}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-super_secret_jwt_key_change_in_production}
      
      # File Storage
      STORAGE_PATH: /app/storage
      FILE_BASE_URL: http://localhost:3002/files
      
      # Logging
      LOG_LEVEL: debug
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_storage:/app/storage
      - backend_logs:/app/logs
    networks:
      - hubspot-network
    command: npm run dev

  # =====================================
  # Frontend React (opcional para desarrollo completo)
  # =====================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hubspot-pdf-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:3002/api
      REACT_APP_FILES_URL: http://localhost:3002/files
      REACT_APP_ENV: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hubspot-network
    command: npm start

  # =====================================
  # Nginx (proxy reverso para producción)
  # =====================================
  nginx:
    image: nginx:alpine
    container_name: hubspot-pdf-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - hubspot-network
    profiles:
      - production

  # =====================================
  # Herramientas de desarrollo
  # =====================================
  
  # Adminer para gestión de base de datos
  adminer:
    image: adminer
    container_name: hubspot-pdf-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - hubspot-network
    profiles:
      - tools

  # Redis Commander para gestión de Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: hubspot-pdf-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - hubspot-network
    profiles:
      - tools

# =====================================
# Redes
# =====================================
networks:
  hubspot-network:
    driver: bridge
    name: hubspot-pdf-network

# =====================================
# Volúmenes
# =====================================
volumes:
  postgres_data:
    name: hubspot-pdf-postgres-data
    driver: local

  redis_data:
    name: hubspot-pdf-redis-data
    driver: local

  backend_storage:
    name: hubspot-pdf-backend-storage
    driver: local

  backend_logs:
    name: hubspot-pdf-backend-logs
    driver: local
